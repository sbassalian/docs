{
  "openapi": "3.0.1",
  "info": {
    "title": "Growi API",
    "description": "API documentation for Growi platform, showcasing the public tracking event endpoint",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.growi.io/api/public/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/tracking_events": {
      "post": {
        "description": "Creates a new tracking event associated with a campaign creator",
        "requestBody": {
          "description": "Tracking event to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTrackingEvent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tracking event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Campaign Affiliate does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/snapshots": {
      "get": {
        "description": "Retrieves time-series data for content engagement metrics within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          },
          {
            "name": "campaign_id",
            "in": "query",
            "required": false,
            "example": 16425,
            "schema": {
              "type": "integer"
            },
            "description": "Filter snapshots by specific campaign ID. You can get campaign IDs from the Get Campaigns endpoint."
          }
        ],
        "responses": {
          "200": {
            "description": "Snapshots retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Snapshots data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/content_platform_composition": {
      "get": {
        "description": "Retrieves a breakdown of content by platform within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Content platform composition retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Content platform composition data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/content_24h_data": {
      "get": {
        "description": "Retrieves 24-hour views and engagement metrics with comparison to previous period",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Content 24h data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Content 24h data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/creators_24h": {
      "get": {
        "description": "Retrieves newly joined creators data with comparison to previous period",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Creators 24h data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Creators 24h data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_creators_by_engagement": {
      "get": {
        "description": "Retrieves your top-performing creators ranked by total engagement within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Top creators by engagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Top creators by engagement data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_creators_by_gmv": {
      "get": {
        "description": "Retrieves your top-performing creators ranked by GMV within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Maximum is 20."
          },
          {
            "name": "include_discord",
            "in": "query",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Include Discord account ID and username for creators. Default is false."
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "example": 123,
            "schema": {
              "type": "integer"
            },
            "description": "Filter results by specific organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Top creators by GMV retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "top_creators_by_gmv": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "brand_name": {
                                "type": "string",
                                "example": "Example Brand",
                                "description": "Name of the brand"
                              },
                              "id": {
                                "type": "integer",
                                "example": 12,
                                "description": "Unique identifier for the creator"
                              },
                              "name": {
                                "type": "string",
                                "example": "John Doe",
                                "description": "Display name of the creator"
                              },
                              "email": {
                                "type": "string",
                                "example": "john.doe@example.com",
                                "description": "Email address of the creator"
                              },
                              "total_gmv": {
                                "type": "number",
                                "example": 1284.53,
                                "description": "Total GMV generated by the creator"
                              },
                              "social_accounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "connected_account_username": {
                                      "type": "string",
                                      "example": "johndoe_official",
                                      "description": "Username on the social media platform"
                                    },
                                    "platform_name": {
                                      "type": "string",
                                      "example": "tik_tok",
                                      "description": "Name of the social media platform"
                                    },
                                    "profile_share_url": {
                                      "type": "string",
                                      "example": "https://www.tiktok.com/@johndoe_official",
                                      "description": "Direct URL to the creator's profile"
                                    },
                                    "total_gmv": {
                                      "type": "number",
                                      "example": 1284.53,
                                      "description": "Total GMV generated through this specific social account"
                                    }
                                  }
                                }
                              },
                              "discord_id": {
                                "type": "string",
                                "example": "779513406264180746",
                                "description": "Discord user ID (included when include_discord=true)"
                              },
                              "discord_username": {
                                "type": "string",
                                "example": "johndoe",
                                "description": "Discord username (included when include_discord=true)"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "current_page": {
                              "type": "integer",
                              "example": 4,
                              "description": "Current page number"
                            },
                            "per_page": {
                              "type": "integer",
                              "example": 4,
                              "description": "Number of results per page"
                            },
                            "row_count": {
                              "type": "integer",
                              "example": 448,
                              "description": "Total number of rows/records"
                            },
                            "page_count": {
                              "type": "integer",
                              "example": 112,
                              "description": "Total number of pages"
                            },
                            "has_more": {
                              "type": "boolean",
                              "example": true,
                              "description": "Whether there are more pages available"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_posts_by_views": {
      "get": {
        "description": "Retrieves your top-performing posts ranked by views within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Top posts by views retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Top posts by views data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/tik_tok_shop_gmv_24h": {
      "get": {
        "description": "Retrieves TikTok Shop GMV data for the last 24 hours",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "TikTok Shop GMV 24h data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "TikTok Shop GMV 24h data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/manual_campaign_progress": {
      "get": {
        "description": "Retrieves the progress of manual campaigns",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Manual campaign progress data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Manual campaign progress data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_connected_accounts_by_engagement": {
      "get": {
        "description": "Retrieves your top-performing social accounts ranked by engagement within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Top connected accounts by engagement retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Top connected accounts by engagement data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_creators_by_posts": {
      "get": {
        "description": "Retrieves your most active creators ranked by post count within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Top creators by posts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Top creators by posts data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/top_earning_creators": {
      "get": {
        "description": "Retrieves your top creators ranked by earnings within a specified date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Top earning creators retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Top earning creators data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/payouts_24h": {
      "get": {
        "description": "Retrieves payout data with comparison to previous period",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "Payouts 24h data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "Payouts 24h data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/user_contents": {
      "get": {
        "description": "Retrieves all user content creation data within a date range",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "example": "05/01/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/01/2025"
            },
            "description": "Start date in MM/DD/YYYY format"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "example": "05/08/2025",
            "schema": {
              "type": "string",
              "format": "date",
              "default": "05/08/2025"
            },
            "description": "End date in MM/DD/YYYY format"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "example": 4,
            "schema": {
              "type": "integer",
              "default": 4
            },
            "description": "Limit the number of results. Default is 4. Recommended is 20. Set to 10,000 to get all data."
          }
        ],
        "responses": {
          "200": {
            "description": "User contents data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "description": "User contents data"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/refresh_data": {
      "post": {
        "description": "Refreshes and re-syncs all creator social accounts data. This endpoint triggers a background job to update content snapshots and synchronize creator data across all connected platforms.",
        "responses": {
          "200": {
            "description": "Data refresh initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/transactions": {
      "get": {
        "description": "Retrieves transaction history including payments, payouts, deposits, withdrawals, and disputes with detailed financial information",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "example": 1,
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination. Default is 1."
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "example": 10,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            },
            "description": "Number of results per page. Default is 10. Maximum is 100."
          },
          {
            "name": "child_organization_id",
            "in": "query",
            "required": false,
            "example": 123,
            "schema": {
              "type": "integer"
            },
            "description": "Filter transactions by specific child organization ID"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "example": "10/01/25",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter transactions from this date (MM/DD/YYYY format)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "example": "10/31/25",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter transactions until this date (MM/DD/YYYY format)"
          },
          {
            "name": "transaction_type",
            "in": "query",
            "required": false,
            "example": "payout",
            "schema": {
              "type": "string",
              "enum": ["payment", "payout", "deposit", "withdrawal", "dispute"]
            },
            "description": "Filter by transaction type"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "example": "Sophia",
            "schema": {
              "type": "string"
            },
            "description": "Search transactions by creator name"
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 5525,
                            "description": "Unique identifier for the transaction"
                          },
                          "formatted_amount": {
                            "type": "string",
                            "example": "-$1,250.00",
                            "description": "Transaction amount in formatted currency with sign"
                          },
                          "transaction_type": {
                            "type": "string",
                            "example": "Payout",
                            "description": "Type of transaction"
                          },
                          "currency": {
                            "type": "string",
                            "example": "usd",
                            "description": "Currency code"
                          },
                          "status": {
                            "type": "string",
                            "example": "Paid",
                            "description": "Transaction status"
                          },
                          "source": {
                            "type": "string",
                            "example": "Balance",
                            "description": "Transaction source"
                          },
                          "destination": {
                            "type": "string",
                            "example": "Multiple Creators",
                            "description": "Transaction destination"
                          },
                          "created": {
                            "type": "integer",
                            "example": 1759952556,
                            "description": "Unix timestamp of transaction creation"
                          },
                          "organization_name": {
                            "type": "string",
                            "example": "Growi",
                            "description": "Name of the organization"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "row_count": {
                          "type": "integer",
                          "example": 42,
                          "description": "Total number of transactions"
                        },
                        "page_count": {
                          "type": "integer",
                          "example": 3,
                          "description": "Total number of pages"
                        },
                        "current_page": {
                          "type": "integer",
                          "example": 1,
                          "description": "Current page number"
                        }
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "amount_sum": {
                          "type": "number",
                          "example": 7283.73,
                          "description": "Total available balance amount"
                        },
                        "fee_sum": {
                          "type": "number",
                          "example": -557.4,
                          "description": "Total fees collected"
                        },
                        "payout_sum": {
                          "type": "number",
                          "example": -11916.27,
                          "description": "Total payout amount (negative value)"
                        },
                        "payment_sum": {
                          "type": "number",
                          "example": 19200,
                          "description": "Total payment amount received"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key or viewer role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/stats/query_ambassador_sales": {
      "get": {
        "description": "Retrieves detailed ambassador sales data including order information, commission amounts, and program details within a specified date range",
            "parameters": [
      {
        "name": "start_date",
        "in": "query",
        "required": true,
        "example": "09/01/2025",
        "schema": {
          "type": "string",
          "format": "date",
          "default": "09/01/2025"
        },
        "description": "Start date in MM/DD/YYYY format"
      },
      {
        "name": "end_date",
        "in": "query",
        "required": true,
        "example": "09/30/2025",
        "schema": {
          "type": "string",
          "format": "date",
          "default": "09/30/2025"
        },
        "description": "End date in MM/DD/YYYY format"
      },
      {
        "name": "page",
        "in": "query",
        "required": false,
        "example": 1,
        "schema": {
          "type": "integer",
          "default": 1
        },
        "description": "Page number for pagination. Default is 1."
      },
      {
        "name": "per_page",
        "in": "query",
        "required": false,
        "example": 20,
        "schema": {
          "type": "integer",
          "default": 20,
          "maximum": 100
        },
        "description": "Number of results per page. Default is 20. Maximum is 100."
      },
      {
        "name": "status",
        "in": "query",
        "required": false,
        "example": "all",
        "schema": {
          "type": "string",
          "enum": ["all", "paid", "due", "pending", "canceled", "refunded"],
          "default": "all"
        },
        "description": "Filter by sale status"
      },
      {
        "name": "creator_email",
        "in": "query",
        "required": false,
        "example": "example@gmail.com",
        "schema": {
          "type": "string",
          "format": "email"
        },
        "description": "Filter results by the creator’s (ambassador’s) email address"
      },
      {
        "name": "affiliate_tag",
        "in": "query",
        "required": false,
        "example": "SUMMER2025",
        "schema": {
          "type": "string"
        },
        "description": "Filter by affiliate tag"
      },
      {
        "name": "order_id",
        "in": "query",
        "required": false,
        "example": "1234567890",
        "schema": {
          "type": "string"
        },
        "description": "Filter by a Shopify order ID"
      }
    ],
        "responses": {
          "200": {
            "description": "Ambassador sales retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1947457,
                            "description": "Unique identifier for the sale record"
                          },
                          "ambassador": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "Amanda Paradis",
                                "description": "Display name of the ambassador"
                              },
                              "email": {
                                "type": "string",
                                "example": "amanda@example.com",
                                "description": "Email address of the ambassador"
                              },
                              "avatar_url": {
                                "type": "string",
                                "nullable": true,
                                "description": "URL to the ambassador's avatar image"
                              }
                            }
                          },
                          "program": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 16200,
                                "description": "Unique identifier for the program"
                              },
                              "name": {
                                "type": "string",
                                "example": "Ambassador Program",
                                "description": "Name of the ambassador program"
                              },
                              "affiliate_status": {
                                "type": "string",
                                "example": "active",
                                "description": "Status of the affiliate"
                              }
                            }
                          },
                          "order": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 1024995,
                                "description": "Unique identifier for the order"
                              },
                              "total": {
                                "type": "string",
                                "example": "$291.70",
                                "description": "Total order amount"
                              },
                              "subtotal": {
                                "type": "string",
                                "example": "$276.50",
                                "description": "Order subtotal"
                              },
                              "log": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "description": "Order activity log"
                              }
                            }
                          },
                          "sale_amount": {
                            "type": "object",
                            "properties": {
                              "formatted": {
                                "type": "string",
                                "example": "$291.70",
                                "description": "Formatted sale amount"
                              },
                              "cents": {
                                "type": "integer",
                                "example": 29170,
                                "description": "Sale amount in cents"
                              }
                            }
                          },
                          "commission": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "example": 8.75,
                                "description": "Commission amount"
                              },
                              "formatted": {
                                "type": "string",
                                "example": "$8.75",
                                "description": "Formatted commission amount"
                              },
                              "original_amount": {
                                "type": "number",
                                "example": 8.75,
                                "description": "Original commission amount"
                              },
                              "original_formatted": {
                                "type": "string",
                                "example": "$8.75",
                                "description": "Formatted original commission amount"
                              },
                              "override": {
                                "type": "number",
                                "example": 0.0,
                                "description": "Override amount"
                              },
                              "has_override": {
                                "type": "boolean",
                                "example": false,
                                "description": "Whether commission has been overridden"
                              }
                            }
                          },
                          "occurred_at": {
                            "type": "string",
                            "example": "2025-09-30T23:55:29.000Z",
                            "description": "ISO 8601 timestamp when the sale occurred"
                          },
                          "due_in_days": {
                            "type": "integer",
                            "example": 50,
                            "description": "Number of days until commission is due"
                          },
                          "invoice": {
                            "type": "string",
                            "nullable": true,
                            "description": "Associated invoice"
                          },
                          "status": {
                            "type": "string",
                            "example": "pending",
                            "enum": [
                              "paid",
                              "due",
                              "pending",
                              "canceled",
                              "refunded"
                            ],
                            "description": "Sale status"
                          },
                          "refunded": {
                            "type": "boolean",
                            "example": false,
                            "description": "Whether the sale has been refunded"
                          },
                          "disable_attribution": {
                            "type": "boolean",
                            "example": false,
                            "description": "Whether attribution is disabled"
                          },
                          "self_referral": {
                            "type": "boolean",
                            "example": false,
                            "description": "Whether this is a self-referral"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "row_count": {
                          "type": "integer",
                          "example": 12588,
                          "description": "Total number of records"
                        },
                        "page_count": {
                          "type": "integer",
                          "example": 630,
                          "description": "Total number of pages"
                        },
                        "current_page": {
                          "type": "integer",
                          "example": 1,
                          "description": "Current page number"
                        }
                      }
                    },
                    "additional_data": {
                      "type": "object",
                      "properties": {
                        "total_gmv": {
                          "type": "number",
                          "example": 1424557.53,
                          "description": "Total Gross Merchandise Value"
                        },
                        "total_commission": {
                          "type": "number",
                          "example": 140331.24,
                          "description": "Total commission amount"
                        },
                        "paid_commission": {
                          "type": "number",
                          "example": 0.0,
                          "description": "Total paid commission"
                        },
                        "unpaid_commission": {
                          "type": "number",
                          "example": 140331.24,
                          "description": "Total unpaid commission"
                        },
                        "total_orders": {
                          "type": "integer",
                          "example": 12588,
                          "description": "Total number of orders"
                        },
                        "total_quantity": {
                          "type": "integer",
                          "example": 31386,
                          "description": "Total quantity sold"
                        },
                        "total_refunded_amount": {
                          "type": "number",
                          "example": 0,
                          "description": "Total refunded amount"
                        },
                        "total_returned_amount": {
                          "type": "number",
                          "example": 0,
                          "description": "Total returned amount"
                        },
                        "total_posts": {
                          "type": "integer",
                          "example": 0,
                          "description": "Total number of posts"
                        }
                      }
                    },
                    "user_contents": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "description": "User-generated content associated with sales"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/brands": {
      "get": {
        "description": "Retrieves a list of all available brands for your organization",
        "responses": {
          "200": {
            "description": "Get your brands information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "brands": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 0,
                            "description": "Unique identifier for the brand"
                          },
                          "name": {
                            "type": "string",
                            "example": "Name",
                            "description": "Display name of the brand"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Organization not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/campaigns": {
      "get": {
        "description": "Retrieves a list of all available campaigns for your organization",
        "responses": {
          "200": {
            "description": "Get your campaigns information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "campaigns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 16425,
                            "description": "Unique identifier for the campaign"
                          },
                          "name": {
                            "type": "string",
                            "example": "Maxfem MVM",
                            "description": "Display name of the campaign"
                          },
                          "campaign_type": {
                            "type": "string",
                            "example": "Campaign",
                            "enum": ["Campaign", "Contract", "Ambassador Program"],
                            "description": "Type of campaign"
                          },
                          "status": {
                            "type": "string",
                            "example": "Active",
                            "enum": ["Active", "Paused", "Canceled", "Completed", "Archived", "Void"],
                            "description": "Current status of the campaign"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Organization not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NewTrackingEvent": {
        "type": "object",
        "required": ["event_name"],
        "properties": {
          "event_name": {
            "type": "string",
            "enum": [
              "cart_viewed",
              "checkout_address_info_submitted",
              "checkout_completed",
              "checkout_contact_info_submitted",
              "checkout_shipping_info_submitted",
              "checkout_started",
              "collection_viewed",
              "page_viewed",
              "payment_info_submitted",
              "product_added_to_cart",
              "product_removed_from_cart",
              "product_viewed",
              "search_submitted",
              "payment_completed",
              "app_installed",
              "app_uninstalled"
            ],
            "description": "Name of the event"
          },
          "occurred_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the event occurred"
          },
          "visitor_uid": {
            "type": "string",
            "description": "Unique identifier for the visitor"
          },
          "event_data": {
            "type": "object",
            "description": "Additional data related to the event"
          },
          "subtotal": {
            "type": "integer",
            "description": "Subtotal amount of the transaction in cents. For example, for $40, input 4000.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "enum": ["usd", "eur", "gbp"],
            "description": "Currency of the transaction",
            "nullable": true
          },
          "conversion_platform": {
            "type": "string",
            "enum": ["shopify", "tik_tok_shop", "ios", "stripe", "whop"],
            "description": "Which platform the conversion happened on",
            "nullable": false
          },
          "order_id": {
            "type": "string",
            "description": "ID of the order",
            "nullable": true
          },
          "order_type": {
            "type": "string",
            "enum": ["one_time", "subscription"],
            "description": "Type of the order",
            "nullable": true
          },
          "payment_id": {
            "type": "string",
            "description": "ID of the payment",
            "nullable": true
          },
          "external_user_id": {
            "type": "string",
            "description": "External user ID associated with the event",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity involved in the event"
          },
          "campaign_affiliate_id": {
            "type": "string",
            "description": "Tag of the campaign affiliate associated with the event. Not required when `order_id` is present and the order is a recurring subscription."
          },
          "subscription_start_date": {
            "type": "integer",
            "description": "UTC integer timestamp for the start of the subscription. Required only for subscription events."
          },
          "subscription_end_date": {
            "type": "integer",
            "description": "UTC integer timestamp for the end of the subscription. Required only for subscription events."
          },
          "product_id": {
            "type": "string",
            "description": "The product or plan ID associated with the purchase. Required only for payment events."
          }
        }
      },
      "Error": {
        "required": ["error", "message"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "StatsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "description": "Endpoint-specific data"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
